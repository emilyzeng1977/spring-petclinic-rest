# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@2.0.0
  aws-cli: circleci/aws-cli@1.3.1
jobs:
  build:
    docker:
      - image: 'maven:3.6-jdk-8-openj9'
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn -U clean package verify
      - run:
          command: |
            arct_val=`mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.artifactId -q -DforceStdout`
            version_val=`mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout`
            echo ${arct_val}-${version_val} >> ./target/version.txt
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: .
          paths:
            - target/

  deploy:
    docker:
      - image: 'cimg/python:3.6'
    steps:
      - checkout
      - attach_workspace:
            at: .
      - aws-s3/copy:
          from: ./target/*.jar
          # spring-petclinic-rest-2.2.5
          to: 's3://tom.niu19'

  deploy_backend:
    executor: aws-cli/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - aws-cli/setup
      - run:
          name: Export enviranment variable version and create version
          command: |
            jar_name=`cat ./target/version.txt`
            version=1.0-`date +"%Y%m%d-%H%M%S"`
            aws elasticbeanstalk create-application-version --application-name digihealth-petclinic --version-label ${version} --source-bundle S3Bucket="tom.niu19",S3Key=${jar_name}
            aws elasticbeanstalk update-environment --application-name digihealth-petclinic --environment-name digihealth-19-petclinic-dev --version-label ${version}
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
      - deploy_backend:
          requires:
            - deploy
